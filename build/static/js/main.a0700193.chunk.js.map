{"version":3,"sources":["middleware/api.js","appRedux/reducer/menu_reducer.js","appRedux/reducer/index.js","constants/actionTypes.js","appRedux/action/menu_action.js","appRedux/action/cart_action.js","components/Menu/Item/index.js","components/Menu/index.js","containers/MenuContainer/index.js","components/Cart/index.js","containers/CartContainer/index.js","App.js","appRedux/store/index.js","serviceWorker.js","index.js"],"names":["store","next","action","callAPI","endpoint","types","actionWith","data","finalAction","Object","assign","requestType","successType","failureType","type","fullPath","fetch","method","headers","body","JSON","stringify","then","res","cb","dispatch","json","catch","err","callbackErr","fetchApi","payload","error","msg","initialState","menus","cartList","addedItems","total","rootReducer","combineReducers","MenuReducer","state","itemId","menuId","cartId","arr","split","item_name","item_id","parseInt","console","log","addedMenu","find","menu","id","addedItem","items","item","existedItem","findIndex","quantity","price","newTotal","cart_id","addcurrentItem","addednewTotal","new_items","filter","getMenus","params","addToCart","subtractQuantity","addQuantity","Item","props","style","border","width","span","name","color","details","likes","HeartTwoTone","twoToneColor","danger","icon","PlusCircleOutlined","onClick","onClickHandler","Menu","handleClick","MenuItem","key","menu_id","description","MenuPanel","size","header","footer","bordered","dataSource","renderItem","PaneList","label","MenuContainer","this","PureComponent","connect","bindActionCreators","Cart","onSubQuantity","onAddQuantity","AddButton","primary","SubButton","MinusCircleOutlined","offset","AddedItems","map","className","CartContainer","stores","createStore","RootReducer","applyMiddleware","ReduxThunk","api","App","padding","margin","position","right","top","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a0700193.chunk.js","sourcesContent":["//import { paramsToQueryString } from '../utils';\n//{paramsToQueryString(allParams)};\nconst apiRoot = 'http://localhost:8000';\n\nconst fetchApi = (endpoint, action, store) => {\n  const fullPath = `${apiRoot + endpoint}`; \n\t\n  return fetch(fullPath, {\n    method: action.method,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: action.body && JSON.stringify(action.body)\n  }).then((res) => {\n    if (action.cb) action.cb(store.dispatch);\n    return res.json();\n  }).catch((err) => action.callbackErr(err));\n};\n\nexport const CALL_API = 'Call API';\n\nexport default store => next => action => {\n  const callAPI = action[CALL_API];\n  if (typeof callAPI === 'undefined') return next(action);\n\n  const { endpoint, types } = callAPI;\n  const actionWith = data => {\n    const finalAction = Object.assign({}, action, data);\n    delete finalAction[CALL_API];\n    return finalAction;\n  };\n\n  const [requestType, successType, failureType] = types;\n\n  next(actionWith({\n    type: requestType\n  }));\n\n  return fetchApi(endpoint, callAPI, store)\n    .then(\n      payload => next(actionWith({\n        type: successType.type,\n        payload\n      })),\n      error => next(actionWith({\n        type: failureType,\n        error: error.msg || 'Something bad happened'\n      }))\n    );\n};\n","import * as actions from '../../constants/actionTypes';\n\nexport const initialState = {\n  menus: [],\n  cartList: [],\n  addedItems:[],\n  total: 0\n};\n\nexport default function MenuReducer(state = initialState, action) {\n  const { type, payload, itemId, menuId, cartId } = action;\n  \n  switch (type) {\n    case actions.GET_MENUS_REQUEST:\n      return {\n        ...state,\n        menus: [],\n      };\n    case actions.GET_MENUS_SUCCESS:\n      return {\n        ...state,\n        menus: payload,\n      };\n    case actions.ADD_TO_CART:\n\t  // here item id will have itemId_itemName le split item\n\t  let arr = itemId.split('_');\n\t  let item_name = arr[0];\n\t  let item_id = parseInt(arr[1]);\n\t  console.log(\"MenuId: \" + menuId +\" ItemId: \" + item_id + \" Name:\" + item_name);\n\t  let addedMenu = state.menus.find(menu => menu.id === parseInt(menuId));\n\t  \n\t  let addedItem = addedMenu.items.find(item => item.id === item_id);\n\t  addedItem.menuId = parseInt(menuId);\n\t  addedItem.cartId = (item_name + '_'+ item_id + '_' + menuId);\n\t \n\t  let existedItem = state.addedItems.findIndex(item => (item.menuId === menuId && item.id === item_id));\n\t if(existedItem > -1){\n\t\t\taddedItem.quantity += 1\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t total: state.total + addedItem.price, \n\t\t\t}\n\t  }else{\n\t\taddedItem.quantity = 1\n            //calculating the total\n            let newTotal = state.total + addedItem.price \n            return{\n                ...state,\n                addedItems: [...state.addedItems, addedItem],\n                total : newTotal,\n            }\n\t  };\n\t  \n     case actions.ADD_QUANTITY:{\n\t\t//let newItems =  [...state.addedItems];\n\t\tlet cart_id = cartId;\n\t\tlet addcurrentItem = state.addedItems.find(item => item.cartId === cart_id);\n\t\taddcurrentItem.quantity += 1;\n\t\tlet addednewTotal = state.total + addcurrentItem.price; \n\t\treturn{\n                ...state,\n                total : addednewTotal,\n         }\n\t\t};\n\t\t\n\t case actions.SUB_QUANTITY:{\n\t\tlet cart_id = cartId;\n\t\tlet addedItem = state.addedItems.find(item => item.cartId === cart_id);\n\t\t\n\t\tif(addedItem.quantity === 1){\n\t\t\tlet new_items = state.addedItems.filter(item=>item.cartId !== cart_id);\n            let newTotal = state.total - addedItem.price\n            return{\n                ...state,\n                addedItems: new_items,\n                total: newTotal\n            }\n\t\t}else{\n\t\t\taddedItem.quantity -= 1\n            let newTotal = state.total - addedItem.price\n            return{\n                ...state,\n                total: newTotal\n            }\n\t\t} \n\t\t};\t\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport MenuReducer from './menu_reducer';\n\nconst rootReducer = combineReducers({\n  MenuReducer,\n});\n\nexport default rootReducer;\n","export const GET_MENUS_REQUEST = 'GET_MENUS_REQUEST';\nexport const GET_MENUS_SUCCESS = 'GET_MENUS_SUCCESS';\nexport const GET_MENUS_ERROR = 'GET_MENUS_ERROR';\n\n\n//For add to Cart action \nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const ADD_QUANTITY = 'ADD_QUANTITY';\nexport const SUB_QUANTITY = 'SUB_QUANTITY';\nexport const EMPTY_CART = 'EMPTY_CART';\n\n","import { CALL_API } from '../../middleware/api';\nimport * as actions from '../../constants/actionTypes';\n\n\nexport const getMenus = (params) => ({\n  [CALL_API]: {\n    params,\n    endpoint: '/menu',\n    method: 'GET',\n    types: [\n      actions.GET_MENUS_REQUEST,\n      {\n        type: actions.GET_MENUS_SUCCESS,\n        payload: (action, state, res) => {\n          return res.json().then(json => {\n\t\t\tconsole.log(json);\n            return json;\n          });\n        }\n      },\n      actions.GET_MENUS_ERROR\n    ]\n  }\n});\n\n\n\n    ","import * as actions from '../../constants/actionTypes';\n\n\nexport const addToCart = (id, menuId) => {\n  return {\n    type: actions.ADD_TO_CART,\n    itemId: id,\n\tmenuId\n  };\n};\nexport const removeFromCart = id => {\n  return {\n    type: actions.REMOVE_FROM_CART,\n    id,\n  };\n};\nexport const subtractQuantity = cartId => {\n  return {\n    type: actions.SUB_QUANTITY,\n    cartId,\n  };\n};\nexport const addQuantity = cartId => {\n  return {\n    type: actions.ADD_QUANTITY,\n    cartId,\n  };\n};\nexport const emptyCart = () => {\n  return {\n    type: actions.EMPTY_CART,\n  };\n};\n\n\n    ","import React from 'react';\nimport { Row, Col, Button } from 'antd';\nimport { PlusCircleOutlined, HeartTwoTone } from '@ant-design/icons'; //icon\n\nfunction Item(props) {\n\n  const onAddClickHandler = (id) => {\n\tconsole.log('Add to cart');\n\tprops.onClickHandler(id, props.menuId);\n  }\t\t\n\t\n  return (\n\t<Row style={{border:'2px solid primary', width:'100%'}}>\n\t\t<Col span={16}>\n\t\t\t<p>{props.name}</p>\n\t\t\t<p style={{color:'grey'}}>{props.details}</p>\n\t  </Col>\n\t   <Col span={4}>\n\t\t\t{props.likes ? props.likes : '0'} <HeartTwoTone twoToneColor=\"#eb2f96\" />\n\t  </Col>\n\t   <Col span={4}>\t\n\t\t<Button\n\t\t  danger \n          type=\"text\"\n          icon={<PlusCircleOutlined />}\n          onClick={() => onAddClickHandler(props.itemId)}>\n\t\t  {props.price} &#8377;\n        </Button>\n\t  </Col>\n    </Row>\n  );\n}\n\nexport default Item;\n","import React from 'react';\nimport { List } from 'antd';\nimport Item from '../Menu/Item';\n\nfunction Menu(props) {\n\n  const handleClick = (id, menuId)=>{\n     props.addToCart(id, menuId); \n  }\n  \n  const MenuItem = (props) => (\n\t\t<Item key={props.item.name +'_'+ props.item.id} itemId={props.item.name +'_'+ props.item.id} menuId={props.menu_id} name={props.item.name} details={props.item.description} price={props.item.price} likes={props.item.likes} onClickHandler={handleClick} />\n   );\n  \n   const MenuPanel = (props) => (\n\t\t<div key={props.menu.id} style={{width:'100%'}}>\n\t\t\t{\n\t\t\t\t<List\n\t\t\t\t  size=\"large\"\n\t\t\t\t  header={<div>{props.menu.name}</div>}\n\t\t\t\t  footer={<div> --------------- </div>}\n\t\t\t\t  bordered\n\t\t\t\t  dataSource={props.menu.items}\n\t\t\t\t  renderItem={item => <List.Item>{<MenuItem menu_id={props.menu.id} item={item}/>}</List.Item>}\n\t\t\t   />\n\t\t\t}\n\t\t</div>\n   );\n  \n   const PaneList = (props) =>(\n\t\t<List\n\t\t  size=\"large\"\n\t\t  header={<div>Menus</div>}\n\t\t  footer={<div>End Of Menu</div>}\n\t\t  bordered\n\t\t  dataSource={props.menus}\n\t\t  renderItem={item => <List.Item>{<MenuPanel menu={item}/>}</List.Item>}\n       />\n   );\n\t\n\t\n  return (\n    <div>\n\t   {\n\t\t  props.menus ? <PaneList {...props}/> : <div  label='Loading Data...'></div>\t\n\t   }\n    </div>\n  );\n}\nexport default Menu;\n","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {getMenus} from '../../appRedux/action/menu_action';\nimport {addToCart} from '../../appRedux/action/cart_action'\nimport Menu from '../../components/Menu';\n\n// This will be a higher order componet that will call API on to fetch menu list & bind data to the Menu component\n\nclass MenuContainer extends PureComponent{\n\n  static propTypes = {\n    getMenus: PropTypes.func.isRequired,\n}\n\n  componentDidMount() {\n    const {getMenus} = this.props;\n    // call to fetch menu from API\n\tgetMenus();\n  }\n  \n  render() {\n    return (\n      <Menu {...this.props} />\n    );\n  }\n}\n\n\n//binding state using\nconst mapStateToProps = (state) => (\n   state.MenuReducer\n);\n\n//binding action using dispacther\nconst mapDispatchToProps = (dispatch) => (\n  bindActionCreators({\n    getMenus,\n\taddToCart\n  }, dispatch)\n);\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuContainer);\n","import React from 'react';\nimport { Row, Col, Button } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport './cart.css'\n\nfunction Cart(props) {\n  \n  console.log(props);\n  \n  const onSubQuantity = (cartId) =>{\n\tconsole.log(\"You CartId: \" + cartId);\n\tprops.subtractQuantity(cartId);\n  }\n  \n  const onAddQuantity = (cartId) =>{\n\tconsole.log(\"You CartId: \" + cartId);\n\tprops.addQuantity(cartId);\n  }\n  \n  const AddButton = (props) => (\n\t<Button\n\t\t  primary \n          type=\"text\"\n          icon={<PlusCircleOutlined />}\n          onClick={() => onAddQuantity(props.cartId)}>\n     </Button>\n  )\n  const SubButton = (props) => (\n\t<Button\n\t\t  primary \n          type=\"text\"\n          icon={<MinusCircleOutlined />}\n          onClick={() => onSubQuantity(props.cartId)}>\n     </Button>\n  )\n  \n  const Item = (props) => (\n\t <div key={props.cartId} style={{width:'100%'}}>\n\t\t<Row>\n\t\t   <Col span={12}>\n\t\t\t\t<p>{props.item.name}</p>\n\t\t\t\t<p>Qty: {props.item.quantity}</p>\n\t\t   </Col>\n\t\t   <Col span={8}>\n\t\t\t\t{props.item.quantity ? (\n\t\t\t\t<Row> \n\t\t\t\t<Col span={10}><AddButton cartId={props.item.cartId}/></Col> \n\t\t\t\t<Col span={10} offset={4}><SubButton cartId={props.item.cartId}/> </Col> \n\t\t\t\t</Row> ): ''} \n\t\t  </Col>\n\t      <Col span={4}>\t\n\t\t\t   <Row><Col span={24}> {parseInt(props.item.price) * parseInt(props.item.quantity)} &#8377; </Col></Row>\n\t      </Col>\n\t\t</Row>\n\t </div>\n  )\n  \n \n  const AddedItems = (props) => (\n\tprops.addedItems ? props.addedItems.map(item => <Item item={item}/>): (<p> Nothing </p>)\n  )\n  return (\n    <Row className=\"container\">\n\t\t<Col span={24}>\n            <div className=\"cart\">\n                  <h3>Your Order</h3>\n                  <div className=\"collection\">\n                       <AddedItems {...props}/>\n                 </div>\n\t\t\t\t <Row className=\"total\">\n\t\t\t\t\t<Col span={8}>Total</Col>\n\t\t\t\t\t<Col span={8} offset={8}>{props.total} &#8377;</Col>\n\t\t\t\t </Row>\n           </div>  \n\t\t </Col> \n    </Row>\n  );\n}\nexport default Cart;\n","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {addToCart, subtractQuantity, addQuantity} from '../../appRedux/action/cart_action';\nimport Cart from '../../components/Cart';\n\n// This will be a higher order componet that will call API on to fetch menu list & bind data to the Menu component\n\nclass CartContainer extends PureComponent{\n\n  static propTypes = {\n\taddToCart: PropTypes.func.isRequired,\n\tsubtractQuantity: PropTypes.func.isRequired,\n\taddQuantity: PropTypes.func.isRequired\n  }\n\n  componentDidMount() {\n    \n  }\n\n  render() {\n    return (\n      <Cart {...this.props} />\n    );\n  }\n}\n\n\n\n//binding state using\nconst mapStateToProps = (state) => (\n  state.MenuReducer\n);\n\n//binding action using dispacther\nconst mapDispatchToProps = (dispatch) => (\n  bindActionCreators({\n\taddToCart,\n\tsubtractQuantity,\n\taddQuantity\n  }, dispatch)\n);\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);\n","import React from 'react';\nimport './App.css';\nimport { Row, Col } from 'antd';\n/*import {\n  BrowserRouter, Switch, Route, Redirect\n} from 'react-router-dom';*/\n\nimport configureStore from \"./appRedux/store\";\nimport { Provider } from 'react-redux';\n\nimport MenuContainer from './containers/MenuContainer';\nimport CartContainer from './containers/CartContainer';\n\nexport const stores = configureStore();\n\nfunction App() {\n  return (\n\t  <Provider store={stores}>\n\t\t<Row style={{border:'2px solid primary',padding:'0 10%',margin:'10%', width:'100%'}}>\n\t\t  <Col span={24}>\n\t\t\t<Row>\n\t\t\t\t<Col span={16}>\n\t\t\t\t  <MenuContainer/>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={6} style={{position: 'fixed',right:'3%', top:'10px', width:'100%'}}>\n\t\t\t\t  <CartContainer/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t  </Col>\n\t\t</Row>\n\t  </Provider>\t\n  );\n}\n\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nimport api from '../../middleware/api';\r\nimport RootReducer from '../reducer';\r\n\r\n\r\nexport default function configureStore() {\r\n    const stores = createStore(RootReducer, applyMiddleware(ReduxThunk, api));\r\n    return stores;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}